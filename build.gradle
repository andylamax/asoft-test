buildscript {
    ext {
        kotlin_version = '1.3.61'
        coroutines_version = "1.3.3"
        kotlin_react_version = "16.9.0-pre.89-kotlin-1.3.60"
        selenium_version = "4.0.0-alpha-2"

        espresso_version = "3.1.0"
        test_runner_version = "1.1.0"
        test_rules_version = "1.1.0"

        android_tools_version = "3.3.2"
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$android_tools_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

plugins {
    id 'kotlin-multiplatform' version '1.3.61'
}

group 'tz.co.asoft'
version '4.0.0'

apply plugin: "kotlinx-serialization"
apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            manifest.srcFile 'src/androidMain/AndroidManifest.xml'
            resources.srcDirs = ['src/androidMain/resources']
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    google()
    jcenter()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-js-wrappers' }
    maven { url 'https://dl.bintray.com/kotlinx/kotlinx' }
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven { url "https://jitpack.io" }
    mavenCentral()
}
kotlin {
    js() {
        browser() {

        }
        compilations.all {
            tasks[compileKotlinTaskName].kotlinOptions {
                kotlinOptions.metaInfo = true
                kotlinOptions.sourceMap = true
                kotlinOptions.moduleKind = 'commonjs'
                kotlinOptions.main = "call"
            }
        }
    }

    jvm() {
        compilations.all {
            tasks[compileKotlinTaskName].kotlinOptions {
                jvmTarget = "1.8"
            }
        }
    }

    android() {
        compilations.all {
            tasks[compileKotlinTaskName].kotlinOptions {
                jvmTarget = "1.8"
            }
        }
        publishLibraryVariants("release")
    }

    sourceSets {
        commonMain {
            dependencies {
                api kotlin('stdlib-common')
                api "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines_version"
                api kotlin("test-common")
                api kotlin("test-annotations-common")
            }
        }

        jvmMain {
            dependencies {
                api kotlin("stdlib-jdk8")
                api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
                api "org.seleniumhq.selenium:selenium-java:$selenium_version"
                api kotlin("test")
                api kotlin("test-junit")
            }
        }

        androidMain {
            dependencies {
                api kotlin("stdlib-jdk8")
                api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

                api kotlin("test")
                api kotlin("test-junit")

                api "androidx.test.espresso:espresso-core:$espresso_version"
                api "androidx.test:runner:$test_runner_version"
                api "androidx.test:rules:$test_rules_version"
            }
        }

        jsMain {
            dependencies {
                api kotlin('stdlib-js')
                api "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:$coroutines_version"
                api "org.jetbrains:kotlin-react:$kotlin_react_version"

                api kotlin("test-js")

                api(npm("react", "16.9.0"))
                api npm("enzyme", "*")
                api npm("jsdom", "*")
                api npm("jsdom-global", "*")
                api npm("enzyme-adapter-react-16", "*")
                api npm("cypress", "*")
            }
        }
    }
}